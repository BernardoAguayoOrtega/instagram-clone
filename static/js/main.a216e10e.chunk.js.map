{"version":3,"sources":["assets/Bernardogram.png","components/App/styles.js","components/Header/styles.js","utils/Context.js","utils/firebase.js","components/Modal/styles.js","components/Modal/index.js","components/Header/index.js","components/Post/styles.js","components/Post/index.js","components/Posts/styles.js","components/Posts/index.js","components/ImageUpload/styles.js","components/ImageUpload/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","AppContainer","styled","div","HeaderContainer","LogoContainer","img","Context","createContext","ContextProvider","children","useState","userName","setUserName","email","setEmail","password","setPassword","user","setUser","Provider","value","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","storage","auth","timestamp","FieldValue","serverTimestamp","Figure","figure","LoginContainer","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","input","fontSize","Modal","classes","modalStyle","open","setOpen","OpenSignIn","setOpenSignIn","useContext","useEffect","unsubscribe","onAuthStateChanged","authUser","Button","type","onClick","signOut","color","onClose","style","className","src","Logo","FormGroup","Input","placeholder","onChange","e","target","preventDefault","createUserWithEmailAndPassword","then","updateProfile","displayName","catch","error","alert","message","signInWithEmailAndPassword","Header","alt","PostContainer","Image","PostText","h3","PostHeader","header","Post","forwardRef","ref","caption","imageUrl","Avatar","ListOfPosts","Posts","posts","setPosts","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","post","data","key","Form","form","ImageUpload","setCaption","progress","setProgress","image","setImage","LinearProgress","variant","files","name","put","on","Math","round","bytesTransferred","totalBytes","child","getDownloadURL","url","add","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.a216e10e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Bernardogram.3ed8aa0d.png\";","//import styled component\nimport styled from 'styled-components';\n\n//create app component and export it\nexport const AppContainer = styled.div`\n\tbackground-color: #fafafa;\n`;\n","//import styled components\nimport styled from 'styled-components';\n\n//create and export Header container\nexport const HeaderContainer = styled.div`\n\tbackground-color: white;\n\tpadding: 1rem;\n\tborder-bottom: 0.1rem solid lightgray;\n\tdisplay:flex;\n\talign-items: center;\n\tjustify-content: space-between;\n`;\n\n//create logo component and export it\nexport const LogoContainer = styled.img`\n\twidth: 20rem;\n`;\n","//import react\nimport React, { createContext, useState } from 'react';\n\n//create context and export it\nexport const Context = createContext();\n\n//create functional component context provider and export it\nexport const ContextProvider = ({ children }) => {\n\t//use state\n\tconst [userName, setUserName] = useState('');\n\tconst [email, setEmail] = useState('');\n\tconst [password, setPassword] = useState('');\n\tconst [user, setUser] = useState(null);\n\n\treturn (\n\t\t<Context.Provider\n\t\t\tvalue={{\n\t\t\t\tuserName,\n\t\t\t\tsetUserName,\n\t\t\t\temail,\n\t\t\t\tsetEmail,\n\t\t\t\tpassword,\n\t\t\t\tsetPassword,\n\t\t\t\tuser,\n\t\t\t\tsetUser,\n\t\t\t}}>\n\t\t\t{children}\n\t\t</Context.Provider>\n\t);\n};\n","//import everything as firebase\nimport * as firebase from 'firebase/app';\n//import firebase dependencies\nimport 'firebase/firestore';\nimport 'firebase/storage';\nimport 'firebase/auth';\n\nfirebase.initializeApp({\n\tapiKey: 'AIzaSyAku9_PcVLMnxG8fdrgD4BWADFaHgf3xrU',\n\tauthDomain: 'instagram-c4b27.firebaseapp.com',\n\tdatabaseURL: 'https://instagram-c4b27.firebaseio.com',\n\tprojectId: 'instagram-c4b27',\n\tstorageBucket: 'instagram-c4b27.appspot.com',\n\tmessagingSenderId: '211353144273',\n\tappId: '1:211353144273:web:a8950cbd81ded6b5f0eef0',\n});\n\n//export data base\nexport const db = firebase.firestore();\n\n//export data base\nexport const storage = firebase.storage();\n\n//export data base\nexport const auth = firebase.auth();\n\n//export timestamp\nexport const timestamp = firebase.firestore.FieldValue.serverTimestamp","//import styled components\nimport styled from 'styled-components';\nimport { makeStyles } from '@material-ui/core';\n\n//create Figure component and export it\nexport const Figure = styled.figure`\n  display:flex;\n  align-items:center;\n  justify-content:center;\n`;\n\n//create logo component and export it\nexport const LogoContainer = styled.img`\n\twidth: 15rem;\n  margin: 0 auto;\n`;\n\n//create and export login container\nexport const LoginContainer = styled.div`\n\n`;\n\n/**\n * @description: get the modal style (position)\n */\nexport function getModalStyle() {\n\tconst top = 50;\n\tconst left = 50;\n\n\treturn {\n\t\ttop: `${top}%`,\n\t\tleft: `${left}%`,\n\t\ttransform: `translate(-${top}%, -${left}%)`,\n\t};\n}\n\n/**\n * @description: use custom hook to set the styles\n */\nexport const useStyles = makeStyles((theme) => ({\n\tpaper: {\n\t\tposition: 'absolute',\n\t\twidth: '40%',\n\t\tbackgroundColor: theme.palette.background.paper,\n\t\tborder: '2px solid #000',\n\t\tboxShadow: theme.shadows[5],\n\t\tpadding: theme.spacing(2, 4, 3),\n\t},\n\tinput: {\n\t\tfontSize: '2rem',\n\t},\n}));","//import react\nimport React, { useState, useContext, useEffect } from 'react';\n//import the context\nimport { Context } from '../../utils/Context';\n//import auth\nimport { auth } from '../../utils/firebase';\n//import logo\nimport Logo from '../../assets/Bernardogram.png';\n//import styled components and logic\nimport {\n\tLogoContainer,\n\tFigure,\n\tLoginContainer,\n\tgetModalStyle,\n\tuseStyles,\n} from './styles';\n//import material ui components\nimport { Modal as ModalMUI, Button, Input, FormGroup } from '@material-ui/core';\n\nexport const Modal = () => {\n\t//use the custom hook useStyles\n\tconst classes = useStyles();\n\t//use state hooks\n\tconst [modalStyle] = useState(getModalStyle);\n\tconst [open, setOpen] = useState(false);\n\tconst [OpenSignIn, setOpenSignIn] = useState(false);\n\t//use context hook\n\tconst {\n\t\tuserName,\n\t\tsetUserName,\n\t\temail,\n\t\tsetEmail,\n\t\tpassword,\n\t\tsetPassword,\n\t\tuser,\n\t\tsetUser,\n\t} = useContext(Context);\n\n\t//signUp function\n\tconst signUp = (e) => {\n\t\te.preventDefault();\n\n\t\tauth\n\t\t\t.createUserWithEmailAndPassword(email, password)\n\t\t\t.then((authUser) => {\n\t\t\t\treturn authUser.user.updateProfile({\n\t\t\t\t\tdisplayName: userName,\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch((error) => alert(error.message));\n\n\t\tsetOpen(false);\n\t};\n\n\t//signIn function\n\tconst signIn = (e) => {\n\t\te.preventDefault();\n\n\t\tauth\n\t\t\t.signInWithEmailAndPassword(email, password)\n\t\t\t.catch((error) => alert(error));\n\n\t\tsetOpenSignIn(false);\n\t};\n\n\t//listen the user\n\tuseEffect(() => {\n\t\tconst unsubscribe = auth.onAuthStateChanged((authUser) => {\n\t\t\tif (authUser) {\n\t\t\t\t//user has logged in\n\t\t\t\tsetUser(authUser);\n\t\t\t} else {\n\t\t\t\t//user has logged out\n\t\t\t\tsetUser(null);\n\t\t\t}\n\t\t});\n\n\t\treturn () => {\n\t\t\t//perform some cleanup actions\n\t\t\tunsubscribe();\n\t\t};\n\t}, [setUser, userName]);\n\n\treturn (\n\t\t<>\n\t\t\t{/*Button to call the modal, depend of user display sign up or Log out*/}\n\t\t\t{user ? (\n\t\t\t\t<Button type='button' onClick={() => auth.signOut()}>\n\t\t\t\t\tLogout\n\t\t\t\t</Button>\n\t\t\t) : (\n\t\t\t\t<LoginContainer>\n\t\t\t\t\t<Button color=\"primary\" type='button' onClick={() => setOpenSignIn(true)}>\n\t\t\t\t\t\tSign In\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button color=\"secondary\" type='button' onClick={() => setOpen(true)}>\n\t\t\t\t\t\tSign Up\n\t\t\t\t\t</Button>\n\t\t\t\t</LoginContainer>\n\t\t\t)}\n\t\t\t{/*Modal from material ui but has ModalMUI name*/}\n\t\t\t<ModalMUI open={open} onClose={() => setOpen(false)}>\n\t\t\t\t<div style={modalStyle} className={classes.paper}>\n\t\t\t\t\t{/*Figure and Logo from styled components*/}\n\t\t\t\t\t<Figure>\n\t\t\t\t\t\t<LogoContainer src={Logo} />\n\t\t\t\t\t</Figure>\n\t\t\t\t\t{/*Form group to style the inputs*/}\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t{/*Inputs*/}\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='User name'\n\t\t\t\t\t\t\tvalue={userName}\n\t\t\t\t\t\t\tonChange={(e) => setUserName(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='Email'\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tplaceholder='password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type='submit' onClick={signUp}>\n\t\t\t\t\t\t\tSign Up\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</div>\n\t\t\t</ModalMUI>\n\t\t\t{/*Modal from material ui but has ModalMUI name and modal for sign in*/}\n\t\t\t<ModalMUI open={OpenSignIn} onClose={() => setOpenSignIn(false)}>\n\t\t\t\t<div style={modalStyle} className={classes.paper}>\n\t\t\t\t\t{/*Figure and Logo from styled components*/}\n\t\t\t\t\t<Figure>\n\t\t\t\t\t\t<LogoContainer src={Logo} />\n\t\t\t\t\t</Figure>\n\t\t\t\t\t{/*Form group to style the inputs*/}\n\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t{/*Inputs*/}\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='Email'\n\t\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t\t\ttype='password'\n\t\t\t\t\t\t\tplaceholder='password'\n\t\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type='submit' onClick={signIn}>\n\t\t\t\t\t\t\tSign In\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</FormGroup>\n\t\t\t\t</div>\n\t\t\t</ModalMUI>\n\t\t</>\n\t);\n};\n","//import react\nimport React from 'react';\n//import logo\nimport Logo from '../../assets/Bernardogram.png';\n//import logo container\nimport { LogoContainer, HeaderContainer } from './styles';\n//import Modal component\nimport { Modal } from '../Modal';\n\n//create and export header component\nexport const Header = () => {\n\treturn (\n\t\t<HeaderContainer>\n\t\t\t<LogoContainer src={Logo} alt='logo' />\n\t\t\t<Modal />\n\t\t</HeaderContainer>\n\t);\n};\n","//import styled components\nimport styled from 'styled-components';\n\n//create and export post container\nexport const PostContainer = styled.div`\n\tmax-width: 50rem;\n\tbackground: white;\n\tborder: 0.1rem solid lightgray;\n\tmargin-bottom: 4.5rem;\n`;\n\n//create and export image\nexport const Image = styled.img`\n\twidth: 100%;\n\tobject-fit: contain;\n\tborder-top: 0.1rem solid lightgray;\n\tborder-bottom: 0.1rem solid lightgray;\n`;\n\n//create and export post text\nexport const PostText = styled.h3`\n\tfont-weight: normal;\n\tmargin-left: 0.5rem;\n\tpadding: 1rem;\n`;\n\n//create and export post header\nexport const PostHeader = styled.header`\n\tdisplay: flex;\n\talign-items: center;\n\tpadding: 1rem;\n\tfont-size: 1.5rem;\n`;\n","//import react\nimport React, { forwardRef } from 'react';\n//import Image styled component\nimport { Image, PostContainer, PostText, PostHeader } from './styles';\n//import material ui components\nimport { Avatar } from '@material-ui/core';\n\n//create post component and export it\nexport const Post = forwardRef(({ userName, caption, imageUrl }, ref) => {\n\treturn (\n\t\t<>\n\t\t\t{/*Post container*/}\n\t\t\t<PostContainer ref={ref}>\n\t\t\t\t{/*Post header with avatar an text*/}\n\t\t\t\t<PostHeader>\n\t\t\t\t\t<Avatar alt={userName} src='/static/images/avatar/1.jpg' />\n\t\t\t\t\t<PostText>\n\t\t\t\t\t\t<strong>{userName}</strong>\n\t\t\t\t\t</PostText>\n\t\t\t\t</PostHeader>\n\n\t\t\t\t{/*Image of the post*/}\n\t\t\t\t<Image src={imageUrl} />\n\n\t\t\t\t{/*Text below image*/}\n\t\t\t\t<PostText>\n\t\t\t\t\t<strong>{`${userName}: `}</strong> {caption}\n\t\t\t\t</PostText>\n\t\t\t</PostContainer>\n\t\t</>\n\t);\n});\n","//import styled components\nimport styled from 'styled-components';\n\n//create and import PostsContainer styled component\nexport const ListOfPosts = styled.div` \n  padding: 2rem;\n  display:flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`","//import react and it hooks\nimport React, { useState, useEffect } from 'react';\n//import post component\nimport { Post } from '../Post';\n//import data base\nimport { db } from '../../utils/firebase';\n// import flip move\nimport FlipMove from 'react-flip-move';\n//import posts container\nimport { ListOfPosts } from './styles';\n\n//create posts component after export it\nexport const Posts = () => {\n\tconst [posts, setPosts] = useState([]);\n\n\t//use effect hook\n\t/**\n\t * @description use data base to access the data and read it from the firestore\n\t */\n\tuseEffect(() => {\n\t\tdb.collection('posts')\n\t\t\t.orderBy('timestamp', 'desc')\n\t\t\t.onSnapshot((snapshot) =>\n\t\t\t\tsetPosts(\n\t\t\t\t\tsnapshot.docs.map((doc) => ({ id: doc.id, post: doc.data() })),\n\t\t\t\t),\n\t\t\t);\n\t}, []);\n\n\treturn (\n\t\t<ListOfPosts>\n\t\t\t<FlipMove>\n\t\t\t\t{posts.map(({ post, id }) => (\n\t\t\t\t\t<Post\n\t\t\t\t\t\tkey={id}\n\t\t\t\t\t\tuserName={post.userName}\n\t\t\t\t\t\timageUrl={post.imageUrl}\n\t\t\t\t\t\tcaption={post.caption}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</FlipMove>\n\t\t</ListOfPosts>\n\t);\n};\n","//import styled components\nimport styled from 'styled-components'\n\n//creat and export form component\nexport const Form = styled.form`\n  display:flex;\n  flex-direction: column;\n  width:40%;\n  background: white;\n  position: fixed;\n  z-index: 1;\n  bottom: 0;\n  left: 30%;\n  padding: 1rem;\n  border: .1rem solid lightgray;\n`","//import react\nimport React, { useState, useContext } from 'react';\n//import material ui components\nimport { Input, Button, LinearProgress } from '@material-ui/core';\n//import form component\nimport { Form } from './styles';\n//import firebase components\nimport { db, storage, timestamp } from '../../utils/firebase';\n//import context\nimport { Context } from '../../utils/Context';\n\n//create and export functional component ImageUpload\nexport const ImageUpload = () => {\n\t//use context hook\n\tconst { user } = useContext(Context);\n\n\t//use state hook\n\tconst [caption, setCaption] = useState('');\n\tconst [progress, setProgress] = useState(0);\n\tconst [image, setImage] = useState('');\n\n\t//get the first image\n\tconst handleChange = (e) => {\n\t\tif (e.target.files[0]) {\n\t\t\tsetImage(e.target.files[0]);\n\t\t}\n\t};\n\n\t//handleUpload\n\tconst handleUpload = () => {\n\t\tconst uploadTask = storage.ref(`images/${image.name}`).put(image);\n\n\t\tuploadTask.on(\n\t\t\t'state_changed',\n\t\t\t(snapshot) => {\n\t\t\t\t//progress function\n\t\t\t\tconst progress = Math.round(\n\t\t\t\t\t(snapshot.bytesTransferred / snapshot.totalBytes) * 100,\n\t\t\t\t);\n\t\t\t\tsetProgress(progress);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\t//error function\n\t\t\t\talert(error.message());\n\t\t\t},\n\t\t\t() => {\n\t\t\t\t//complete function\n\t\t\t\tstorage\n\t\t\t\t\t.ref('images')\n\t\t\t\t\t.child(image.name)\n\t\t\t\t\t.getDownloadURL()\n\t\t\t\t\t.then((url) => {\n\t\t\t\t\t\tdb.collection('posts').add({\n\t\t\t\t\t\t\ttimestamp: timestamp(),\n\t\t\t\t\t\t\tcaption: caption,\n\t\t\t\t\t\t\timageUrl: url,\n\t\t\t\t\t\t\tuserName: user.displayName,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tsetProgress(0);\n\t\t\t\t\t\tsetCaption('');\n\t\t\t\t\t\tsetImage('');\n\t\t\t\t\t});\n\t\t\t},\n\t\t);\n\t};\n\n\treturn (\n\t\t<Form>\n\t\t\t<LinearProgress variant=\"determinate\" value={progress} />\n\t\t\t<Input\n\t\t\t\tplaceholder='Enter the caption'\n\t\t\t\ttype='text'\n\t\t\t\tvalue={caption}\n\t\t\t\tonChange={(e) => setCaption(e.target.value)}\n\t\t\t/>\n\t\t\t<Input type='file' onChange={handleChange} />\n\t\t\t<Button variant='text' color='primary' onClick={handleUpload}>Upload</Button>\n\t\t</Form>\n\t);\n};\n","//import react\nimport React, { useContext } from 'react';\n//import app component\nimport { AppContainer } from './styles';\n//import header component\nimport { Header } from '../Header';\n//import posts\nimport { Posts } from '../Posts';\n//import image upload\nimport { ImageUpload } from '../ImageUpload';\n//import Context\nimport { Context } from '../../utils/Context';\n\nfunction App() {\n\tconst { user } = useContext(Context);\n\treturn (\n\t\t<AppContainer>\n\t\t\t<Header />\n\t\t\t<Posts />\n\t\t\t{user && <ImageUpload />}\n\t\t</AppContainer>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","//import react\nimport React from 'react';\n//import react dom\nimport ReactDOM from 'react-dom';\n//import app component\nimport App from './components/App';\n//import context provider\nimport { ContextProvider } from './utils/Context';\n//import service worker\nimport * as serviceWorker from './serviceWorker';\n//import the styles\nimport './index.css';\n\nReactDOM.render(\n\t<ContextProvider>\n\t\t<App />\n\t</ContextProvider>,\n\tdocument.getElementById('root'),\n);\n\n//service worker\nserviceWorker.register();\n"],"sourceRoot":""}